# 기본 이미지 파일
FROM ubuntu:latest
LABEL maintainer = "withgossing@gmail.com"
LABEL title = "Go worker"
LABEL version = "0.1"
LABEL description = "Go Quant"

# set -eux; 쉘의 옵션을 설정하는 명령
# -e : 쉘 스크립트 실행 중에 0이 아닌 값으로 exit을 한 명령이 있으며 나머지 스크립트를 실행하지 않는다.
# -u : 정의되지 않은 변수(undefined)를 참조하면 에러를 출력하며 바로 exit한다.
# -x : 쉘 스크립트가 실행하는 모든 명령을 화면에 출력한다.
RUN set -eux; \
    apt-get update \
    && apt-get -y upgrade

# myslq : MySQL database server
# vim : text editor
# net-tools : network 상태를 확인하는 도구
# figlet : 아스키 아트를 출력하는 도구
# python3-pip : python3 패키지 관리도구
RUN set -eux; \
    apt-get install -y \
    mysql-server \
    vim \
    net-tools \
    figlet \
    python3-pip \
    openjdk-17-jdk

# groupadd : 사용자 그룹 추가 (apps)
# useradd : 사용자 추가 (apps 그룹에 worker 사용자 추가)
RUN set -eux; \
    groupadd apps; \
    useradd -g apps -m worker

RUN service mysql restart

# requests : http 프로토콜을 사용 가능한 도구
# beautifulsoup4 : html 을 분석하는 도구
# selenium
RUN set -eux; \
    pip install \
    requests \
    beautifulsoup4 \
    selenium

WORKDIR /home/worker
VOLUME /home/worker

EXPOSE 22 80 3000 3306 5000 8080 8888

# ENTRYPOINT ["/bin/bash"]
# CMD 의 경우 1회만 실행되며 중복일 경우 마지막 CMD 만 실행

# docker build -t withgossing/worker01 /Users/gossing/Documents/WorkSpace/Docker
# docker run --name worker01 -d -it -p 23:22 -p 81:80 -p 3001:3000 -p 3307:3306 -p 5001:5000 -p 8081:8080 -p 8889:8888 -v /Users/gossing/Documents/WorkSpace/worker01:/home/worker withgossing/worker01 /bin/bash
# 사용하고자 하는 포트들이 사용하고 있는지 확인 필요
# docker exec -itu 0 worker01 bash

# RUN yum -y install python3-pip filewalld net-tools mariadb
# RUN pip install jupyterlab
# RUN pip install flask